{ "swagger": "2.0", "info": { "version": "0.1.1", "title": "Monopoly Deal API", "license": { "url": "https://www.gnu.org/licenses/", "name": "GNUv3" }, "description": "This is an API for the Monopoly Deal Game" }, "definitions": { "NewGame": { "required": [ "usesDeck" ], "type": "object", "properties": { "usesDeck": { "type": "integer" } } }, "Game": { "required": [ "creator", "created", "usesDeck", "finished", "discardSize", "drawSize" ], "type": "object", "properties": { "creator": { "type": "integer" }, "discardSize": { "maximum": 9223372036854775807, "minimum": -9223372036854775808, "type": "integer" }, "created": { "$ref": "#/definitions/UTCTime" }, "usesDeck": { "type": "integer" }, "finished": { "type": "boolean" }, "drawSize": { "maximum": 9223372036854775807, "minimum": -9223372036854775808, "type": "integer" } } }, "CreatedGame": { "required": [ "id", "player" ], "type": "object", "properties": { "id": { "type": "integer" }, "player": { "type": "integer" } } }, "UserAuth": { "required": [ "userName", "password" ], "type": "object", "properties": { "userName": { "type": "string" }, "password": { "type": "string" } } }, "UTCTime": { "example": "2016-07-22T00:00:00Z", "format": "yyyy-mm-ddThh:MM:ssZ", "type": "string" }, "GameStatus": { "required": [ "game", "players" ], "type": "object", "properties": { "me": { "type": "integer" }, "game": { "allOf": [ { "type": "object", "properties": { "id": { "type": "integer" } } }, { "$ref": "#/definitions/Game" } ], "type": "object" }, "players": { "additionalProperties": { "$ref": "#/definitions/Player" }, "type": "object" } } }, "NewUser": { "required": [ "userName", "password", "email" ], "type": "object", "properties": { "email": { "type": "string" }, "userName": { "type": "string" }, "password": { "type": "string" } } }, "Message": { "required": [ "status", "message" ], "type": "object", "properties": { "status": { "example": 200, "maximum": 599, "minimum": 0, "type": "integer" }, "payload": { "example": null, "type": "object" }, "message": { "type": "string" } } }, "Player": { "required": [ "playing", "user", "isPaying", "turnNum" ], "type": "object", "properties": { "playing": { "type": "integer" }, "turnNum": { "maximum": 3, "minimum": 1, "type": "integer", "description": "the turn number, can be null if user is not taking a turn" }, "user": { "type": "integer" }, "isPaying": { "type": "boolean" } } } }, "paths": { "/api/v1/login": { "post": { "summary": "Authenticate with username and password", "consumes": [ "application/json;charset=utf-8" ], "responses": { "400": { "description": "Invalid `body`" }, "200": { "schema": { "allOf": [ { "$ref": "#/definitions/Message" }, { "type": "object", "properties": { "payload": { "example": null, "type": "object" } } } ], "type": "object" }, "description": "" } }, "produces": [ "application/json;charset=utf-8" ], "parameters": [ { "required": true, "schema": { "$ref": "#/definitions/UserAuth" }, "in": "body", "name": "body" } ], "tags": [ "auth" ] } }, "/api/v1/game/{gid}/status": { "get": { "summary": "Obtain more in-depth game information", "responses": { "404": { "description": "`gid` not found" }, "200": { "schema": { "allOf": [ { "$ref": "#/definitions/Message" }, { "type": "object", "properties": { "payload": { "$ref": "#/definitions/GameStatus" } } } ], "type": "object" }, "description": "" } }, "produces": [ "application/json;charset=utf-8" ], "parameters": [ { "required": true, "in": "path", "name": "gid", "type": "integer" } ], "description": "This obtains some basic game information such as current player making moves, and what players are in the game at the moment.", "tags": [ "game" ] } }, "/api/v1/game/{gid}": { "get": { "summary": "Obtain the game information of a specific ID", "responses": { "404": { "description": "`gid` not found" }, "200": { "schema": { "allOf": [ { "$ref": "#/definitions/Message" }, { "type": "object", "properties": { "payload": { "$ref": "#/definitions/Game" } } } ], "type": "object" }, "description": "" } }, "produces": [ "application/json;charset=utf-8" ], "parameters": [ { "required": true, "in": "path", "name": "gid", "type": "integer" } ], "tags": [ "game" ] } }, "/api/v1/game": { "post": { "summary": "Create a new game", "consumes": [ "application/json;charset=utf-8" ], "responses": { "400": { "description": "Invalid `body`" }, "200": { "schema": { "allOf": [ { "$ref": "#/definitions/Message" }, { "type": "object", "properties": { "payload": { "$ref": "#/definitions/CreatedGame" } } } ], "type": "object" }, "description": "" } }, "produces": [ "application/json;charset=utf-8" ], "parameters": [ { "required": true, "schema": { "$ref": "#/definitions/NewGame" }, "in": "body", "name": "body" } ], "description": "Creates a game, making the host as the creator of this game. The host may also choose the card deck (game mode) to from.", "tags": [ "game" ] }, "get": { "summary": "Obtain all the open public games", "responses": { "200": { "schema": { "allOf": [ { "$ref": "#/definitions/Message" }, { "type": "object", "properties": { "payload": { "$ref": "#/definitions/Game" } } } ], "type": "object" }, "description": "" } }, "produces": [ "application/json;charset=utf-8" ], "tags": [ "game" ] } }, "/api/v1/signup": { "post": { "summary": "Create new user", "consumes": [ "application/json;charset=utf-8" ], "responses": { "400": { "description": "Invalid `body`" }, "200": { "schema": { "allOf": [ { "$ref": "#/definitions/Message" }, { "type": "object", "properties": { "payload": { "example": null, "type": "object" } } } ], "type": "object" }, "description": "" } }, "produces": [ "application/json;charset=utf-8" ], "parameters": [ { "required": true, "schema": { "$ref": "#/definitions/NewUser" }, "in": "body", "name": "body" } ], "tags": [ "auth" ] } } }, "tags": [ { "name": "auth", "description": "Authenticating to service" }, { "name": "game", "description": "Game status operations" } ] }
